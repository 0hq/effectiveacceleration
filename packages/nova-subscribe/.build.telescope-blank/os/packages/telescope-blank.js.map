{"version":3,"file":"/packages/telescope-blank.js","sources":["telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/package-tap.i18n","telescope-blank/lib/both.js","telescope-blank/lib/routes.js","telescope-blank/lib/server/publications.js","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/de.i18n.json","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/en.i18n.json","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/es.i18n.json","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/fr.i18n.json","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/it.i18n.json","telescope-blank//Users/sacha/Dev/Telescope/packages/telescope-blank/i18n/zh-CN.i18n.json"],"names":[],"mappings":";;;;;;;;AAAA,iH;;AAEA,+D;AACA,gD;;;;;;;;;;;;;;;;;;;ACHA,uB;;AAEA,sB;AACA,iC;AACA,mB;AACA,4D;AACA,uF;AACA,0E;AACA,e;AACA,mF;AACA,yE;AACA,K;AACA,G;AACA,C;AACA,qC;;AAEA,iB;;AAEA,qB;AACA,gC;AACA,mB;AACA,iB;AACA,mB;AACA,e;AACA,8F;AACA,wF;AACA,K;AACA,G;AACA,C;AACA,wC;;AAEA,kB;;AAEA,8B;AACA,e;AACA,C;;;;;;;;;;;;;;;;;;ACnCA,4B;AACA,E;AACA,gC;AACA,wB;AACA,2C;AACA,K;;AAEA,G;;;;;;;;;;;;;;;;;;ACPA,sD;AACA,wC;AACA,G;;;;;;;;;;;;;;;;;;ACFA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,gD;AACA,qF;;;;;;;;;;;;;;;;;;;ACRA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,+C;AACA,kC;AACA,C;;AAEA,0D;AACA,6C;AACA,C;;AAEA,0F;;;;;;;;;;;;;;;;;;;ACfA,6B;AACA,qC;AACA,kC;;AAEA,gC;AACA,yD;AACA,C;AACA,kD;AACA,qC;AACA,C;;AAEA,6D;AACA,gD;AACA,C;;AAEA,6F","sourcesContent":["TAPi18n.packages[\"telescope-blank\"] = {\"translation_function_name\":\"__\",\"helper_name\":\"_\",\"namespace\":\"project\"};\n\n// define package's translation function (proxy to the i18next)\n__ = TAPi18n._getPackageI18nextProxy(\"project\");\n","// Custom Post Property\n\nvar customProperty = {\n  propertyName: 'customProperty',\n  propertySchema: {\n    type: String,                           // property type\n    label: 'customLabel',                   // key string used for internationalization\n    optional: true,                         // make this property optional\n    autoform: {\n      editable: true,                       // make this property editable by users\n      type: \"bootstrap-datetimepicker\"      // assign a custom input type\n    }\n  }\n}\naddToPostSchema.push(customProperty);\n\n// Custom Setting\n\nvar customSetting = {\n  propertyName: 'customSetting',\n  propertySchema: {\n    type: String,\n    optional: true,\n    autoform: {\n      group: 'customGroup',                 // assign custom group (fieldset) in Settings form\n      private: true                         // mark as private (not published to client)\n    }\n  }\n}\naddToSettingsSchema.push(customSetting);\n\n// Global Function\n\nmyFunction = function (a, b) {\n  return a + b;\n}","Meteor.startup(function () {\n  \n  Router.route('/custom-path', {\n    name: 'customRoute',\n    template: getTemplate('customTemplate')\n  });\n\n});","Meteor.publish('customPublication', function (limit) {\n  return Posts.find({}, {limit: limit});\n});","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"de\"])) {\n  TAPi18n.translations[\"de\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"de\"][namespace])) {\n  TAPi18n.translations[\"de\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"de\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\n// integrate the fallback language translations \nTAPi18n.addResourceBundle(\"en\", namespace, {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"es\"])) {\n  TAPi18n.translations[\"es\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"es\"][namespace])) {\n  TAPi18n.translations[\"es\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"es\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"fr\"])) {\n  TAPi18n.translations[\"fr\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"fr\"][namespace])) {\n  TAPi18n.translations[\"fr\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"fr\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"it\"])) {\n  TAPi18n.translations[\"it\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"it\"][namespace])) {\n  TAPi18n.translations[\"it\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"it\"][namespace], {\"translation_key\":\"translation string\"});\n","var _ = Package.underscore._,\n    package_name = \"telescope-blank\",\n    namespace = \"telescope-blank\";\n\nif (package_name != \"project\") {\n    namespace = TAPi18n.packages[package_name].namespace;\n}\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"])) {\n  TAPi18n.translations[\"zh-CN\"] = {};\n}\n\nif(_.isUndefined(TAPi18n.translations[\"zh-CN\"][namespace])) {\n  TAPi18n.translations[\"zh-CN\"][namespace] = {};\n}\n\n_.extend(TAPi18n.translations[\"zh-CN\"][namespace], {\"translation_key\":\"translation string\"});\n"]}